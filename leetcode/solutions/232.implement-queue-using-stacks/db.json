{"java":"class MyQueue {\n\n    Stack<Integer> oldStack, newStack;\n\n    /**\n     * Initialize your data structure here.\n     */\n    public MyQueue() {\n        oldStack = new Stack<>();\n        newStack = new Stack<>();\n    }\n\n    /**\n     * Push element x to the back of queue.\n     */\n    public void push(int x) {\n        newStack.push(x);\n    }\n\n    /**\n     * Removes the element from in front of queue and returns that element.\n     */\n    public int pop() {\n        shiftStack();\n        return oldStack.pop();\n    }\n\n    /**\n     * Get the front element.\n     */\n    public int peek() {\n        shiftStack();\n        return oldStack.peek();\n    }\n\n    /**\n     * Returns whether the queue is empty.\n     */\n    public boolean empty() {\n        return oldStack.isEmpty() && newStack.isEmpty();\n    }\n\n    private void shiftStack() {\n        if (oldStack.isEmpty()) {\n            while (!newStack.isEmpty()) {\n                oldStack.push(newStack.pop());\n            }\n        }\n    }\n}\n\n/**\n * Your MyQueue object will be instantiated and called as such:\n * MyQueue obj = new MyQueue();\n * obj.push(x);\n * int param_2 = obj.pop();\n * int param_3 = obj.peek();\n * boolean param_4 = obj.empty();\n */"}