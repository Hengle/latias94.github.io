{"java":"class Solution {\n    public int[] intersection(int[] nums1, int[] nums2) {\n        Set<Integer> set = new HashSet<>();\n        Arrays.sort(nums2);\n\n        for (int num : nums1) {\n            if (BinarySearch(nums2, num)) {\n                set.add(num);\n            }\n        }\n        int[] array = new int[set.size()];\n        int index = 0;\n        for (int num : set) {\n            array[index] = num;\n            index++;\n        }\n        return array;\n    }\n\n    public boolean BinarySearch(int[] array, int x) {\n        return BinarySearch(array, x, 0, array.length - 1);\n    }\n\n    public boolean BinarySearch(int[] array, int x, int low, int high) {\n        if (low > high) return false;\n        int mid = (low + high) / 2;\n        if (array[mid] > x) {\n            return BinarySearch(array, x, low, mid - 1);\n        } else if (array[mid] < x) {\n            return BinarySearch(array, x, mid + 1, high);\n        } else {\n            return true;\n        }\n    }\n}"}