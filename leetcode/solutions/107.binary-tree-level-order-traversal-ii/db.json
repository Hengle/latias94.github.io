{"java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public List<List<Integer>> levelOrderBottom(TreeNode root) {\n        Queue<TreeNode> queue = new LinkedList<>();\n        List<List<Integer>> list = new LinkedList<>();\n        if (root == null) return list;\n        queue.offer(root);\n        while (!queue.isEmpty()) {\n            int size = queue.size();\n            List<Integer> subList = new LinkedList<>();\n            for (int i = 0; i < size; i++) {\n                if (queue.peek().left != null) queue.offer(queue.peek().left);\n                if (queue.peek().right != null) queue.offer(queue.peek().right);\n                subList.add(queue.poll().val);\n            }\n            list.add(0, subList);\n        }\n        return list;\n    }\n}"}