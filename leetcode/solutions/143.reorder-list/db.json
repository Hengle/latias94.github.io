{"java":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public void reorderList(ListNode head) {\n        Map<Integer, ListNode> map = new HashMap<Integer, ListNode>();\n        ListNode helper = head;\n        int index = 0;\n        while (helper != null) {\n            map.put(index, helper);\n            helper = helper.next;\n            index++;\n        }\n\n        int length = index - 1;\n        index = 0;\n\n        while (length - index >= (length + 1) / 2) {\n            if (length - index == (length + 1) / 2) {\n                map.get(length - index).next = null;\n                break;\n            }\n            map.get(index).next = map.get(length - index);\n            map.get(length - index).next = map.get(++index);\n        }\n    }\n}"}