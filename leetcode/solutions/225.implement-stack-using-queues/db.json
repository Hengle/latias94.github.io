{"java":"class MyStack {\n\n    Queue<Integer> queue;\n\n    /**\n     * Initialize your data structure here.\n     */\n    public MyStack() {\n        queue = new LinkedList<>();\n    }\n\n    /**\n     * Push element x onto stack.\n     */\n    public void push(int x) {\n        queue.add(x);\n        shiftQueue();\n    }\n\n    /**\n     * Removes the element on top of the stack and returns that element.\n     */\n    public int pop() {\n        return queue.poll();\n    }\n\n    /**\n     * Get the top element.\n     */\n    public int top() {\n        return queue.peek();\n    }\n\n    /**\n     * Returns whether the stack is empty.\n     */\n    public boolean empty() {\n        return queue.isEmpty();\n    }\n\n    private void shiftQueue() {\n        for (int i = 1; i < queue.size(); i++) {\n            queue.add(queue.poll());\n        }\n    }\n}\n\n/**\n * Your MyStack object will be instantiated and called as such:\n * MyStack obj = new MyStack();\n * obj.push(x);\n * int param_2 = obj.pop();\n * int param_3 = obj.top();\n * boolean param_4 = obj.empty();\n */"}