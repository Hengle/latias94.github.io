{"java":"class Solution {\n    public int[] singleNumber(int[] nums) {\n        int temp = 0;\n        for (int i = 0; i < nums.length; i++) {\n            temp ^= nums[i];\n        }\n        int diffIndex = 0;\n        for (int i = 0; i < Integer.bitCount(temp); i++) {\n            if ((temp & 1 << i) != 0) {\n                diffIndex = i;\n            }\n        }\n\n        List<Integer> indexIsZero = new ArrayList<>();\n        List<Integer> indexIsOne = new ArrayList<>();\n        for (int i = 0; i < nums.length; i++) {\n            if ((nums[i] & 1 << diffIndex) != 0) {\n                indexIsOne.add(nums[i]);\n            } else {\n                indexIsZero.add(nums[i]);\n            }\n        }\n        return new int[]{singleNumberI(indexIsZero), singleNumberI(indexIsOne)};\n    }\n\n    public int singleNumberI(List<Integer> nums) {\n        if (nums == null) return 0;\n        int temp = 0;\n        for (int i : nums) {\n            temp = temp ^ i;\n        }\n        return temp;\n    }\n}"}