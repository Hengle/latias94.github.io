{"java":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public ListNode rotateRight(ListNode head, int k) {\n        ListNode prehead = new ListNode(-1);\n        prehead.next = head;\n        ListNode front = prehead;\n        ListNode end = prehead;\n        int length;\n        for (length = 0; end.next != null; length++) {\n            end = end.next;\n        }\n        if (length == 0) return null;\n        k = k % length;\n        \n        if (head.next == null || k <= 0) return head;\n        for (int i = 0; i < k - 1; i++) {\n            if (head.next != null) {\n                head = head.next;\n            } else {\n                return null;\n            }\n        }\n\n        if (head.next == null) {\n            return prehead.next;\n        }\n\n        while (head.next != null) {\n            head = head.next;\n            front = front.next;\n        }\n\n        head.next = prehead.next;\n        prehead.next = front.next;\n        front.next = null;\n\n        return prehead.next;\n    }\n}"}