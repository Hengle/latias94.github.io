{"java":"class Solution {\n    public int nextGreaterElement(int n) {\n        String num = n + \"\";\n        char[] nums = num.toCharArray();\n        int i = num.length() - 1;\n        while (i > 0 && nums[i] <= nums[i - 1])\n            i--;\n        // 如果都是降序排列 说明没有比原数字更大的数了\n        if (i <= 0) return -1;\n\n        reverse(nums, i, nums.length - 1);\n        for (int j = i; j < num.length(); j++) {\n            if (nums[j] > nums[i - 1]) {\n                swap(nums, j, i - 1);\n                break;\n            }\n        }\n        long result = Long.parseLong(String.valueOf(nums));\n        if (num.length() == 10 && result > Integer.MAX_VALUE)\n            return -1;\n        return (int) result;\n    }\n\n    public void swap(char[] nums, int i, int j) {\n        char temp = nums[j];\n        nums[j] = nums[i];\n        nums[i] = temp;\n    }\n\n    public void reverse(char[] nums, int start, int end) {\n        char[] temp = new char[end - start + 1];\n        for (int i = start, k = temp.length - 1; i <= end; i++, k--) {\n            temp[k] = nums[i];\n        }\n        for (int i = start, k = 0; i <= end; i++, k++) {\n            nums[i] = temp[k];\n        }\n    }\n}"}