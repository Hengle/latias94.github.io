{"java":"class Solution {\n    public List<String> letterCombinations(String digits) {\n        if (digits.length() == 0) return new ArrayList<>();\n        List<List<String>> list = new ArrayList<>();\n        String[] letterStr = {\"\", \"abc\", \"def\", \"ghi\", \"jkl\", \"mno\", \"pqrs\", \"tuv\", \"wxyz\"};\n        for (int i = 0; i < digits.length(); i++) {\n            int num = Character.getNumericValue(digits.charAt(i));\n            String representStr = letterStr[num - 1];\n            List<String> stringList = new ArrayList<>();\n\n            if (i > 0) {\n                // i位置对应的 representStr\n                for (int j = 0; j < representStr.length(); j++) {\n                    // i-1位置对应的List<String>\n                    List<String> lastStringList = list.get(i - 1);\n                    // 要插入lastStringList的单个字符串\n                    String str = String.valueOf(representStr.charAt(j));\n                    for (String aLastStringList : lastStringList) {\n                        // 新字符加在最后\n                        stringList.add(aLastStringList + str);\n                    }\n                }\n            } else {\n                for (int j = 0; j < representStr.length(); j++) {\n                    stringList.add(String.valueOf(representStr.charAt(j)));\n                }\n                if (digits.length() == 1) {\n                    return stringList;\n                }\n            }\n            list.add(stringList);\n        }\n        return list.get(list.size() - 1);\n    }\n}"}