{"java":"class Solution {\n    public int[] intersect(int[] nums1, int[] nums2) {\n        List<Integer> list1 = new LinkedList<>();\n        List<Integer> list2 = new ArrayList<>();\n        Arrays.sort(nums2);\n\n        for (int num : nums2) {\n            list2.add(num);\n        }\n\n        for (int num : nums1) {\n            int res = BinarySearch(list2, num);\n            if (res != -1) {\n                list1.add(num);\n                list2.remove(res);\n            }\n        }\n        int[] array = new int[list1.size()];\n        int index = 0;\n        for (int num : list1) {\n            array[index] = num;\n            index++;\n        }\n        return array;\n    }\n\n    public int BinarySearch(List<Integer> array, int x) {\n        return BinarySearch(array, x, 0, array.size() - 1);\n    }\n\n    public int BinarySearch(List<Integer> array, int x, int low, int high) {\n        if (low > high) return -1;\n        int mid = (low + high) / 2;\n        if (array.get(mid) > x) {\n            return BinarySearch(array, x, low, mid - 1);\n        } else if (array.get(mid) < x) {\n            return BinarySearch(array, x, mid + 1, high);\n        } else {\n            return mid;\n        }\n    }\n}"}