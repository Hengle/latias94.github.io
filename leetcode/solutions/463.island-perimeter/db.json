{"java":"class Solution {\n    public int islandPerimeter(int[][] grid) {\n        int res = 0;\n        for (int row = 0; row < grid.length; row++) {\n            for (int col = 0; col < grid[0].length; col++) {\n                if (grid[row][col] == 1) {\n                    res += calculateEdge(grid, row, col);\n                }\n            }\n        }\n        return res;\n    }\n\n    public int calculateEdge(int[][] grid, int row, int col) {\n        int res = 0;\n        if (row == 0) res++;\n        if (col == 0) res++;\n        if (row == grid.length - 1) res++;\n        if (col == grid[0].length - 1) res++;\n        if (row > 0 && grid[row - 1][col] == 0) res++;\n        if (row < grid.length - 1 && grid[row + 1][col] == 0) res++;\n        if (col > 0 && grid[row][col - 1] == 0) res++;\n        if (col < grid[0].length - 1 && grid[row][col + 1] == 0) res++;\n        return res;\n    }\n}"}