{"java":"/**\n * Definition for an interval.\n * public class Interval {\n *     int start;\n *     int end;\n *     Interval() { start = 0; end = 0; }\n *     Interval(int s, int e) { start = s; end = e; }\n * }\n */\nclass Solution {\n    public List<Interval> merge(List<Interval> intervals) {\n        if (intervals.size() == 0) return new ArrayList<>();\n\n        List<Interval> list = new ArrayList<>();\n        int n = intervals.size();\n        int[] starts = new int[n];\n        int[] ends = new int[n];\n        for (int i = 0; i < n; i++) {\n            starts[i] = intervals.get(i).start;\n            ends[i] = intervals.get(i).end;\n        }\n        Arrays.sort(starts);\n        Arrays.sort(ends);\n\n        for (int i = 0, j = 0; i < n; i++) {\n            if (i == n - 1 || starts[i + 1] > ends[i]) {\n                list.add(new Interval(starts[j], ends[i]));\n                j = i + 1;\n            }\n        }\n        return list;\n    }\n}"}