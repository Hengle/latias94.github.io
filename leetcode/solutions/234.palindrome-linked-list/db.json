{"java":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public boolean isPalindrome(ListNode head) {\n        if (head == null) return true;\n        ListNode slow = head, fast = head;\n        while (fast != null && fast.next != null) {\n            fast = fast.next.next;\n            slow = slow.next;\n        }\n\n        if (fast != null) {\n            slow = slow.next;\n        }\n\n        fast = head;\n        if (slow != null) {\n            slow = reverseList(slow);\n        } else {\n            return true;\n        }\n\n        while (slow != null) {\n            if (fast.val == slow.val) {\n                fast = fast.next;\n                slow = slow.next;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    \n    public ListNode reverseList(ListNode head) {\n        ListNode temp = head;\n        ListNode p, q, r;\n        p = temp;\n        q = temp.next;\n        temp.next = null;\n        while (q != null) {\n            r = q.next;\n            q.next = p;\n            p = q;\n            q = r;\n        }\n        return p;\n    }\n}"}